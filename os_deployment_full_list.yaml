--- 
- hosts: localhost
  connection: local
  gather_facts: false
  name: Booting to Network Operating System image
  tasks: 
#IDRAC DEPLOYMENTS - DELL
    - name: "Power off Dell Server"
      dellemc.openmanage.dellemc_change_power_state:
        idrac_ip: "{{ item.idrac_ip }}"
        idrac_password: "{{ idrac_password }}"
        idrac_user: "{{ idrac_user }}"
        change_power: ForceOff
      when: item.vendor|lower =="dell"
      with_items: "{{ hosts }}"
      ignore_errors: true

    - name: "Booting to Network Operating System image (CIFS)"
      dellemc.openmanage.idrac_os_deployment:
        idrac_ip: "{{ item.idrac_ip }}"
        idrac_password: "{{ idrac_password }}"
        idrac_user: "{{ idrac_user }}"
        share_name: "{{ cifs_share_name }}"
        share_user: "{{ cifs_share_user }}"
        share_password: "{{ cifs_share_password }}"
        iso_image: "{{ cifs_iso_image }}"        
        expose_duration: 15
      when: os_deploy_type == "cifs" and item.vendor|lower =="dell"
      with_items: "{{ hosts }}"

    - name: "Booting to Network Operating System image (NFS)"
      dellemc.openmanage.idrac_os_deployment:
        idrac_ip: "{{ item.idrac_ip }}"
        idrac_password: "{{ idrac_password }}"
        idrac_user: "{{ idrac_user }}"
        share_name: "{{ nfs_share_name }}"
        share_user: "{{ nfs_share_user }}"
        share_password: "{{ nfs_share_password }}"
        iso_image: "{{ nfs_iso_image }}"
        expose_duration: 15
      when: os_deploy_type == "nfs" and item.vendor|lower =="dell"
      with_items: "{{ hosts }}"

#REDFISH DEPLOYMENTS - REDFISH

    - name: Turn system power off
      community.general.redfish_command:
        category: Systems
        command: PowerForceOff
        baseuri: "{{ item.redfish_ip }}"
        username: "{{ redfish_user }}"
        password: "{{ redfish_password }}"
      when: item.vendor|lower == "redfish"
      with_items: "{{hosts}}"

    - name: Insert Virtual Media
      community.general.redfish_command:
        category: Systems
        command: VirtualMediaInsert
        baseuri: "{{ item.redfish_ip }}"
        username: "{{ redfish_user }}"
        password: "{{ redfish_password }}"
        virtual_media:
          image_url: "{{ http_share }}"
          media_types:
            - CD
#        resource_id: 1
      when: item.vendor|lower == "redfish"
      with_items: "{{hosts}}"

    - pause:
        minutes: 1

    - name: Turn system power on
      community.general.redfish_command:
        category: Systems
        command: PowerReboot
        baseuri: "{{ item.redfish_ip }}"
        username: "{{ redfish_user }}"
        password: "{{ redfish_password }}"
      when: onetimeboot.changed and item.vendor|lower == "redfish"
      with_items: "{{hosts}}"

#ILO DEPLOYMENTS - HP

    - name: Power off a server
      community.general.hpilo_boot:
        host: "{{ item.ilo_ip }}"
        login: "{{ ilo_user }}"
        password: "{{ ilo_password }}"
        state: poweroff
      when: item.vendor|lower =="hp"
      with_items: "{{ hosts }}"
      ignore_errors: true


    - pause: 
        minutes: 1

    - name: Task to boot a system using an ISO from an HP iLO interface only if the system is an HP server
      community.general.hpilo_boot:
        host: "{{ item.ilo_ip }}"
        login: "{{ ilo_user }}"
        password: "{{ ilo_password }}"
        media: cdrom 
        state: boot_once
        image: "{{ http_share }}"
      when: item.vendor|lower =="hp"
      with_items: "{{ hosts }}"


#Timer

    - set_fact: mydate="{{lookup('pipe','date')}}"

    - name: Code Finished Executing at Time/Date
      debug:
        var=mydate

    - name: Pause for OS Deployment and KS Configuration (EST 20 min)
      pause:
        minutes: 20

    - name: Checking Host for being Fully Online and Connected to vCenter 
      community.vmware.vmware_host_facts:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        esxi_hostname: "{{ item.esxi_hostname }}"
      register: connected
      until: connected is not failed
      retries: 20
      delay: 60
      vars:
        color_reset: "\e[0m"
        yellow: "\e[0m\e[38;5;226m"
        ansible_callback_diy_runner_retry_msg: >-
          {%- set result = ansible_callback_diy.result.output -%}
          {%- set retries_left = result.retries - result.attempts -%}
          RESOURCE NOT AVAILABLE YET - RETRYING: {{ ansible_callback_diy.task.name }} {{ yellow }}({{ retries_left }} Retries left)
        ansible_callback_diy_runner_retry_msg_color: cyan
      with_items: "{{ hosts }}"

    - name: Configure DVS
      include: add_dvs_include_list.yaml
      with_items: "{{ hosts }}"
      loop_control:
        loop_var: outside

    - name: Configure Hosts additional Settings
      include: configure_host_include_list.yaml
      with_items: "{{ hosts }}"
      loop_control:
        loop_var: outside
